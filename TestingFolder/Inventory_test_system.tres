[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://dq7dtw2tlj0ie"]

[ext_resource type="Texture2D" uid="uid://djn6tt7cb5epb" path="res://assets/Inventory Assets/InventoryBackGroundFon.png" id="1_4gmvr"]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_mdgy1"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_br511"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wudsa"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_rndgj"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_qqr66"]
function = 0

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_o80of"]
function = 12

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_c4obj"]
default_input_values = [0, 0.0, 1, 0.05]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_bbwbp"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0rjjv"]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_nsq4k"]
texture = ExtResource("1_4gmvr")

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D tex_frg_9;



void fragment() {
// Input:8
	vec2 n_out8p0 = UV;


// Texture2D:9
	vec4 n_out9p0 = texture(tex_frg_9, n_out8p0);


// VectorDecompose:10
	float n_out10p0 = n_out9p0.x;
	float n_out10p1 = n_out9p0.y;
	float n_out10p2 = n_out9p0.z;
	float n_out10p3 = n_out9p0.w;


// VectorCompose:11
	vec3 n_out11p0 = vec3(n_out10p0, n_out10p1, n_out10p2);


// Input:2
	float n_out2p0 = TIME;


// FloatOp:3
	float n_in3p1 = 2.00000;
	float n_out3p0 = n_out2p0 * n_in3p1;


// FloatFunc:4
	float n_out4p0 = sin(n_out3p0);


// FloatFunc:5
	float n_out5p0 = abs(n_out4p0);


// FloatOp:6
	float n_in6p1 = 0.05000;
	float n_out6p0 = n_out5p0 * n_in6p1;


// FloatOp:7
	float n_out7p0 = n_out10p3 + n_out6p0;


// Output:0
	COLOR.rgb = n_out11p0;
	COLOR.a = n_out7p0;


}
"
graph_offset = Vector2(-524.438, -365.443)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(360, -320)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_wudsa")
nodes/fragment/2/position = Vector2(-820, -160)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatOp_rndgj")
nodes/fragment/3/position = Vector2(-520, -180)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatFunc_qqr66")
nodes/fragment/4/position = Vector2(-380, -160)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatFunc_o80of")
nodes/fragment/5/position = Vector2(-200, -160)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_c4obj")
nodes/fragment/6/position = Vector2(3.86848, -117.612)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_bbwbp")
nodes/fragment/7/position = Vector2(180, -220)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_0rjjv")
nodes/fragment/8/position = Vector2(-744.489, -370.674)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_nsq4k")
nodes/fragment/9/position = Vector2(-420, -540)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorDecompose_mdgy1")
nodes/fragment/10/position = Vector2(-200, -340)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorCompose_br511")
nodes/fragment/11/position = Vector2(74.772, -376.584)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 6, 0, 6, 0, 7, 1, 9, 0, 10, 0, 10, 3, 7, 0, 10, 0, 11, 0, 10, 1, 11, 1, 10, 2, 11, 2, 11, 0, 0, 0, 7, 0, 0, 1, 8, 0, 9, 0)
